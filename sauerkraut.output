Terminales no usados en la gramática

   "="
   '!'


Estado 23 conflictos: 1 desplazamiento/reducción
Estado 74 conflictos: 1 reducción/reducción


Gramática

    0 $accept: S $end

    1 S: ST

    2 ST: EXPR ST
    3   | FUNC ST
    4   | VAR ST
    5   | %empty

    6 EXPR: INSTR

    7 VAR: VARKW IDENT
    8    | VARKW IDENT '=' VALUE

    9 FUNC: FUNKW IDENT ARGS '{' ST '}'

   10 ARGS: '(' ARGSET ')'
   11     | '(' ')'

   12 ARGSET: IDENT
   13       | IDENT ',' ARGSET

   14 IDENT: ID

   15 INT: INTEGER

   16 BLOCK: EXPR BLOCK
   17      | %empty

   18 INSTR: ASSIGN ';'
   19      | CALL ';'
   20      | WHILE

   21 CALL: IDENT '(' PASSEDARGS ')'
   22     | IDENT '(' ')'

   23 PASSEDARGS: INSTR ',' PASSEDARGS
   24           | INSTR
   25           | %empty

   26 WHILE: WHILEKW '(' I2 ')' BLOCK END

   27 I2: I '<' I
   28   | I '>' I
   29   | I LE I
   30   | I GE I
   31   | I EQ I
   32   | I NE I
   33   | I OR I
   34   | I AND I

   35 ASSIGN: IDENT '=' I

   36 I: I '+' I
   37  | I '-' I
   38  | I '*' I
   39  | I '/' I
   40  | I '<' I
   41  | I '>' I
   42  | I LE I
   43  | I GE I
   44  | I EQ I
   45  | I NE I
   46  | I OR I
   47  | I AND I
   48  | IDENT
   49  | INT

   50 OBJECT: '{' KV_SET '}'

   51 KV_SET: KV KV_SET
   52       | KV
   53       | %empty

   54 KV: IDENT ':' VALUE ';'

   55 ARRAY: '[' V_SET ']'

   56 V_SET: VALUE ',' V_SET
   57      | VALUE
   58      | %empty

   59 VALUE: INT
   60      | STRING
   61      | ARRAY
   62      | OBJECT


Terminales con las reglas donde aparecen

$end (0) 0
'!' (33)
'(' (40) 10 11 21 22 26
')' (41) 10 11 21 22 26
'*' (42) 38
'+' (43) 36
',' (44) 13 23 56
'-' (45) 37
'/' (47) 39
':' (58) 54
';' (59) 18 19 54
'<' (60) 27 40
'=' (61) 8 35
'>' (62) 28 41
'[' (91) 55
']' (93) 55
'{' (123) 9 50
'}' (125) 9 50
error (256)
ID (258) 14
INTEGER (259) 15
STRING (260) 60
VARKW (261) 7 8
FUNKW (262) 9
END (263) 26
LE (264) 29 42
GE (265) 30 43
EQ (266) 31 44
NE (267) 32 45
OR (268) 33 46
AND (269) 34 47
WHILEKW (270) 26
"=" (271)


No terminales con las reglas donde aparecen

$accept (34)
    en la izquierda: 0
S (35)
    en la izquierda: 1, en la derecha: 0
ST (36)
    en la izquierda: 2 3 4 5, en la derecha: 1 2 3 4 9
EXPR (37)
    en la izquierda: 6, en la derecha: 2 16
VAR (38)
    en la izquierda: 7 8, en la derecha: 4
FUNC (39)
    en la izquierda: 9, en la derecha: 3
ARGS (40)
    en la izquierda: 10 11, en la derecha: 9
ARGSET (41)
    en la izquierda: 12 13, en la derecha: 10 13
IDENT (42)
    en la izquierda: 14, en la derecha: 7 8 9 12 13 21 22 35 48 54
INT (43)
    en la izquierda: 15, en la derecha: 49 59
BLOCK (44)
    en la izquierda: 16 17, en la derecha: 16 26
INSTR (45)
    en la izquierda: 18 19 20, en la derecha: 6 23 24
CALL (46)
    en la izquierda: 21 22, en la derecha: 19
PASSEDARGS (47)
    en la izquierda: 23 24 25, en la derecha: 21 23
WHILE (48)
    en la izquierda: 26, en la derecha: 20
I2 (49)
    en la izquierda: 27 28 29 30 31 32 33 34, en la derecha: 26
ASSIGN (50)
    en la izquierda: 35, en la derecha: 18
I (51)
    en la izquierda: 36 37 38 39 40 41 42 43 44 45 46 47 48 49, en la derecha:
    27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
OBJECT (52)
    en la izquierda: 50, en la derecha: 62
KV_SET (53)
    en la izquierda: 51 52 53, en la derecha: 50 51
KV (54)
    en la izquierda: 54, en la derecha: 51 52
ARRAY (55)
    en la izquierda: 55, en la derecha: 61
V_SET (56)
    en la izquierda: 56 57 58, en la derecha: 55 56
VALUE (57)
    en la izquierda: 59 60 61 62, en la derecha: 8 54 56 57


Estado 0

    0 $accept: . S $end

    ID       desplazar e ir al estado 1
    VARKW    desplazar e ir al estado 2
    FUNKW    desplazar e ir al estado 3
    WHILEKW  desplazar e ir al estado 4

    $default  reduce usando la regla 5 (ST)

    S       ir al estado 5
    ST      ir al estado 6
    EXPR    ir al estado 7
    VAR     ir al estado 8
    FUNC    ir al estado 9
    IDENT   ir al estado 10
    INSTR   ir al estado 11
    CALL    ir al estado 12
    WHILE   ir al estado 13
    ASSIGN  ir al estado 14


Estado 1

   14 IDENT: ID .

    $default  reduce usando la regla 14 (IDENT)


Estado 2

    7 VAR: VARKW . IDENT
    8    | VARKW . IDENT '=' VALUE

    ID  desplazar e ir al estado 1

    IDENT  ir al estado 15


Estado 3

    9 FUNC: FUNKW . IDENT ARGS '{' ST '}'

    ID  desplazar e ir al estado 1

    IDENT  ir al estado 16


Estado 4

   26 WHILE: WHILEKW . '(' I2 ')' BLOCK END

    '('  desplazar e ir al estado 17


Estado 5

    0 $accept: S . $end

    $end  desplazar e ir al estado 18


Estado 6

    1 S: ST .

    $default  reduce usando la regla 1 (S)


Estado 7

    2 ST: EXPR . ST

    ID       desplazar e ir al estado 1
    VARKW    desplazar e ir al estado 2
    FUNKW    desplazar e ir al estado 3
    WHILEKW  desplazar e ir al estado 4

    $default  reduce usando la regla 5 (ST)

    ST      ir al estado 19
    EXPR    ir al estado 7
    VAR     ir al estado 8
    FUNC    ir al estado 9
    IDENT   ir al estado 10
    INSTR   ir al estado 11
    CALL    ir al estado 12
    WHILE   ir al estado 13
    ASSIGN  ir al estado 14


Estado 8

    4 ST: VAR . ST

    ID       desplazar e ir al estado 1
    VARKW    desplazar e ir al estado 2
    FUNKW    desplazar e ir al estado 3
    WHILEKW  desplazar e ir al estado 4

    $default  reduce usando la regla 5 (ST)

    ST      ir al estado 20
    EXPR    ir al estado 7
    VAR     ir al estado 8
    FUNC    ir al estado 9
    IDENT   ir al estado 10
    INSTR   ir al estado 11
    CALL    ir al estado 12
    WHILE   ir al estado 13
    ASSIGN  ir al estado 14


Estado 9

    3 ST: FUNC . ST

    ID       desplazar e ir al estado 1
    VARKW    desplazar e ir al estado 2
    FUNKW    desplazar e ir al estado 3
    WHILEKW  desplazar e ir al estado 4

    $default  reduce usando la regla 5 (ST)

    ST      ir al estado 21
    EXPR    ir al estado 7
    VAR     ir al estado 8
    FUNC    ir al estado 9
    IDENT   ir al estado 10
    INSTR   ir al estado 11
    CALL    ir al estado 12
    WHILE   ir al estado 13
    ASSIGN  ir al estado 14


Estado 10

   21 CALL: IDENT . '(' PASSEDARGS ')'
   22     | IDENT . '(' ')'
   35 ASSIGN: IDENT . '=' I

    '='  desplazar e ir al estado 22
    '('  desplazar e ir al estado 23


Estado 11

    6 EXPR: INSTR .

    $default  reduce usando la regla 6 (EXPR)


Estado 12

   19 INSTR: CALL . ';'

    ';'  desplazar e ir al estado 24


Estado 13

   20 INSTR: WHILE .

    $default  reduce usando la regla 20 (INSTR)


Estado 14

   18 INSTR: ASSIGN . ';'

    ';'  desplazar e ir al estado 25


Estado 15

    7 VAR: VARKW IDENT .
    8    | VARKW IDENT . '=' VALUE

    '='  desplazar e ir al estado 26

    $default  reduce usando la regla 7 (VAR)


Estado 16

    9 FUNC: FUNKW IDENT . ARGS '{' ST '}'

    '('  desplazar e ir al estado 27

    ARGS  ir al estado 28


Estado 17

   26 WHILE: WHILEKW '(' . I2 ')' BLOCK END

    ID       desplazar e ir al estado 1
    INTEGER  desplazar e ir al estado 29

    IDENT  ir al estado 30
    INT    ir al estado 31
    I2     ir al estado 32
    I      ir al estado 33


Estado 18

    0 $accept: S $end .

    $default  aceptar


Estado 19

    2 ST: EXPR ST .

    $default  reduce usando la regla 2 (ST)


Estado 20

    4 ST: VAR ST .

    $default  reduce usando la regla 4 (ST)


Estado 21

    3 ST: FUNC ST .

    $default  reduce usando la regla 3 (ST)


Estado 22

   35 ASSIGN: IDENT '=' . I

    ID       desplazar e ir al estado 1
    INTEGER  desplazar e ir al estado 29

    IDENT  ir al estado 30
    INT    ir al estado 31
    I      ir al estado 34


Estado 23

   21 CALL: IDENT '(' . PASSEDARGS ')'
   22     | IDENT '(' . ')'

    ID       desplazar e ir al estado 1
    WHILEKW  desplazar e ir al estado 4
    ')'      desplazar e ir al estado 35

    ')'  [reduce usando la regla 25 (PASSEDARGS)]

    IDENT       ir al estado 10
    INSTR       ir al estado 36
    CALL        ir al estado 12
    PASSEDARGS  ir al estado 37
    WHILE       ir al estado 13
    ASSIGN      ir al estado 14


Estado 24

   19 INSTR: CALL ';' .

    $default  reduce usando la regla 19 (INSTR)


Estado 25

   18 INSTR: ASSIGN ';' .

    $default  reduce usando la regla 18 (INSTR)


Estado 26

    8 VAR: VARKW IDENT '=' . VALUE

    INTEGER  desplazar e ir al estado 29
    STRING   desplazar e ir al estado 38
    '{'      desplazar e ir al estado 39
    '['      desplazar e ir al estado 40

    INT     ir al estado 41
    OBJECT  ir al estado 42
    ARRAY   ir al estado 43
    VALUE   ir al estado 44


Estado 27

   10 ARGS: '(' . ARGSET ')'
   11     | '(' . ')'

    ID   desplazar e ir al estado 1
    ')'  desplazar e ir al estado 45

    ARGSET  ir al estado 46
    IDENT   ir al estado 47


Estado 28

    9 FUNC: FUNKW IDENT ARGS . '{' ST '}'

    '{'  desplazar e ir al estado 48


Estado 29

   15 INT: INTEGER .

    $default  reduce usando la regla 15 (INT)


Estado 30

   48 I: IDENT .

    $default  reduce usando la regla 48 (I)


Estado 31

   49 I: INT .

    $default  reduce usando la regla 49 (I)


Estado 32

   26 WHILE: WHILEKW '(' I2 . ')' BLOCK END

    ')'  desplazar e ir al estado 49


Estado 33

   27 I2: I . '<' I
   28   | I . '>' I
   29   | I . LE I
   30   | I . GE I
   31   | I . EQ I
   32   | I . NE I
   33   | I . OR I
   34   | I . AND I
   36 I: I . '+' I
   37  | I . '-' I
   38  | I . '*' I
   39  | I . '/' I
   40  | I . '<' I
   41  | I . '>' I
   42  | I . LE I
   43  | I . GE I
   44  | I . EQ I
   45  | I . NE I
   46  | I . OR I
   47  | I . AND I

    LE   desplazar e ir al estado 50
    GE   desplazar e ir al estado 51
    EQ   desplazar e ir al estado 52
    NE   desplazar e ir al estado 53
    OR   desplazar e ir al estado 54
    AND  desplazar e ir al estado 55
    '>'  desplazar e ir al estado 56
    '<'  desplazar e ir al estado 57
    '+'  desplazar e ir al estado 58
    '-'  desplazar e ir al estado 59
    '*'  desplazar e ir al estado 60
    '/'  desplazar e ir al estado 61


Estado 34

   35 ASSIGN: IDENT '=' I .
   36 I: I . '+' I
   37  | I . '-' I
   38  | I . '*' I
   39  | I . '/' I
   40  | I . '<' I
   41  | I . '>' I
   42  | I . LE I
   43  | I . GE I
   44  | I . EQ I
   45  | I . NE I
   46  | I . OR I
   47  | I . AND I

    LE   desplazar e ir al estado 62
    GE   desplazar e ir al estado 63
    EQ   desplazar e ir al estado 64
    NE   desplazar e ir al estado 65
    OR   desplazar e ir al estado 66
    AND  desplazar e ir al estado 67
    '>'  desplazar e ir al estado 68
    '<'  desplazar e ir al estado 69
    '+'  desplazar e ir al estado 58
    '-'  desplazar e ir al estado 59
    '*'  desplazar e ir al estado 60
    '/'  desplazar e ir al estado 61

    $default  reduce usando la regla 35 (ASSIGN)


Estado 35

   22 CALL: IDENT '(' ')' .

    $default  reduce usando la regla 22 (CALL)


Estado 36

   23 PASSEDARGS: INSTR . ',' PASSEDARGS
   24           | INSTR .

    ','  desplazar e ir al estado 70

    $default  reduce usando la regla 24 (PASSEDARGS)


Estado 37

   21 CALL: IDENT '(' PASSEDARGS . ')'

    ')'  desplazar e ir al estado 71


Estado 38

   60 VALUE: STRING .

    $default  reduce usando la regla 60 (VALUE)


Estado 39

   50 OBJECT: '{' . KV_SET '}'

    ID  desplazar e ir al estado 1

    $default  reduce usando la regla 53 (KV_SET)

    IDENT   ir al estado 72
    KV_SET  ir al estado 73
    KV      ir al estado 74


Estado 40

   55 ARRAY: '[' . V_SET ']'

    INTEGER  desplazar e ir al estado 29
    STRING   desplazar e ir al estado 38
    '{'      desplazar e ir al estado 39
    '['      desplazar e ir al estado 40

    $default  reduce usando la regla 58 (V_SET)

    INT     ir al estado 41
    OBJECT  ir al estado 42
    ARRAY   ir al estado 43
    V_SET   ir al estado 75
    VALUE   ir al estado 76


Estado 41

   59 VALUE: INT .

    $default  reduce usando la regla 59 (VALUE)


Estado 42

   62 VALUE: OBJECT .

    $default  reduce usando la regla 62 (VALUE)


Estado 43

   61 VALUE: ARRAY .

    $default  reduce usando la regla 61 (VALUE)


Estado 44

    8 VAR: VARKW IDENT '=' VALUE .

    $default  reduce usando la regla 8 (VAR)


Estado 45

   11 ARGS: '(' ')' .

    $default  reduce usando la regla 11 (ARGS)


Estado 46

   10 ARGS: '(' ARGSET . ')'

    ')'  desplazar e ir al estado 77


Estado 47

   12 ARGSET: IDENT .
   13       | IDENT . ',' ARGSET

    ','  desplazar e ir al estado 78

    $default  reduce usando la regla 12 (ARGSET)


Estado 48

    9 FUNC: FUNKW IDENT ARGS '{' . ST '}'

    ID       desplazar e ir al estado 1
    VARKW    desplazar e ir al estado 2
    FUNKW    desplazar e ir al estado 3
    WHILEKW  desplazar e ir al estado 4

    $default  reduce usando la regla 5 (ST)

    ST      ir al estado 79
    EXPR    ir al estado 7
    VAR     ir al estado 8
    FUNC    ir al estado 9
    IDENT   ir al estado 10
    INSTR   ir al estado 11
    CALL    ir al estado 12
    WHILE   ir al estado 13
    ASSIGN  ir al estado 14


Estado 49

   26 WHILE: WHILEKW '(' I2 ')' . BLOCK END

    ID       desplazar e ir al estado 1
    WHILEKW  desplazar e ir al estado 4

    $default  reduce usando la regla 17 (BLOCK)

    EXPR    ir al estado 80
    IDENT   ir al estado 10
    BLOCK   ir al estado 81
    INSTR   ir al estado 11
    CALL    ir al estado 12
    WHILE   ir al estado 13
    ASSIGN  ir al estado 14


Estado 50

   29 I2: I LE . I
   42 I: I LE . I

    ID       desplazar e ir al estado 1
    INTEGER  desplazar e ir al estado 29

    IDENT  ir al estado 30
    INT    ir al estado 31
    I      ir al estado 82


Estado 51

   30 I2: I GE . I
   43 I: I GE . I

    ID       desplazar e ir al estado 1
    INTEGER  desplazar e ir al estado 29

    IDENT  ir al estado 30
    INT    ir al estado 31
    I      ir al estado 83


Estado 52

   31 I2: I EQ . I
   44 I: I EQ . I

    ID       desplazar e ir al estado 1
    INTEGER  desplazar e ir al estado 29

    IDENT  ir al estado 30
    INT    ir al estado 31
    I      ir al estado 84


Estado 53

   32 I2: I NE . I
   45 I: I NE . I

    ID       desplazar e ir al estado 1
    INTEGER  desplazar e ir al estado 29

    IDENT  ir al estado 30
    INT    ir al estado 31
    I      ir al estado 85


Estado 54

   33 I2: I OR . I
   46 I: I OR . I

    ID       desplazar e ir al estado 1
    INTEGER  desplazar e ir al estado 29

    IDENT  ir al estado 30
    INT    ir al estado 31
    I      ir al estado 86


Estado 55

   34 I2: I AND . I
   47 I: I AND . I

    ID       desplazar e ir al estado 1
    INTEGER  desplazar e ir al estado 29

    IDENT  ir al estado 30
    INT    ir al estado 31
    I      ir al estado 87


Estado 56

   28 I2: I '>' . I
   41 I: I '>' . I

    ID       desplazar e ir al estado 1
    INTEGER  desplazar e ir al estado 29

    IDENT  ir al estado 30
    INT    ir al estado 31
    I      ir al estado 88


Estado 57

   27 I2: I '<' . I
   40 I: I '<' . I

    ID       desplazar e ir al estado 1
    INTEGER  desplazar e ir al estado 29

    IDENT  ir al estado 30
    INT    ir al estado 31
    I      ir al estado 89


Estado 58

   36 I: I '+' . I

    ID       desplazar e ir al estado 1
    INTEGER  desplazar e ir al estado 29

    IDENT  ir al estado 30
    INT    ir al estado 31
    I      ir al estado 90


Estado 59

   37 I: I '-' . I

    ID       desplazar e ir al estado 1
    INTEGER  desplazar e ir al estado 29

    IDENT  ir al estado 30
    INT    ir al estado 31
    I      ir al estado 91


Estado 60

   38 I: I '*' . I

    ID       desplazar e ir al estado 1
    INTEGER  desplazar e ir al estado 29

    IDENT  ir al estado 30
    INT    ir al estado 31
    I      ir al estado 92


Estado 61

   39 I: I '/' . I

    ID       desplazar e ir al estado 1
    INTEGER  desplazar e ir al estado 29

    IDENT  ir al estado 30
    INT    ir al estado 31
    I      ir al estado 93


Estado 62

   42 I: I LE . I

    ID       desplazar e ir al estado 1
    INTEGER  desplazar e ir al estado 29

    IDENT  ir al estado 30
    INT    ir al estado 31
    I      ir al estado 94


Estado 63

   43 I: I GE . I

    ID       desplazar e ir al estado 1
    INTEGER  desplazar e ir al estado 29

    IDENT  ir al estado 30
    INT    ir al estado 31
    I      ir al estado 95


Estado 64

   44 I: I EQ . I

    ID       desplazar e ir al estado 1
    INTEGER  desplazar e ir al estado 29

    IDENT  ir al estado 30
    INT    ir al estado 31
    I      ir al estado 96


Estado 65

   45 I: I NE . I

    ID       desplazar e ir al estado 1
    INTEGER  desplazar e ir al estado 29

    IDENT  ir al estado 30
    INT    ir al estado 31
    I      ir al estado 97


Estado 66

   46 I: I OR . I

    ID       desplazar e ir al estado 1
    INTEGER  desplazar e ir al estado 29

    IDENT  ir al estado 30
    INT    ir al estado 31
    I      ir al estado 98


Estado 67

   47 I: I AND . I

    ID       desplazar e ir al estado 1
    INTEGER  desplazar e ir al estado 29

    IDENT  ir al estado 30
    INT    ir al estado 31
    I      ir al estado 99


Estado 68

   41 I: I '>' . I

    ID       desplazar e ir al estado 1
    INTEGER  desplazar e ir al estado 29

    IDENT  ir al estado 30
    INT    ir al estado 31
    I      ir al estado 100


Estado 69

   40 I: I '<' . I

    ID       desplazar e ir al estado 1
    INTEGER  desplazar e ir al estado 29

    IDENT  ir al estado 30
    INT    ir al estado 31
    I      ir al estado 101


Estado 70

   23 PASSEDARGS: INSTR ',' . PASSEDARGS

    ID       desplazar e ir al estado 1
    WHILEKW  desplazar e ir al estado 4

    $default  reduce usando la regla 25 (PASSEDARGS)

    IDENT       ir al estado 10
    INSTR       ir al estado 36
    CALL        ir al estado 12
    PASSEDARGS  ir al estado 102
    WHILE       ir al estado 13
    ASSIGN      ir al estado 14


Estado 71

   21 CALL: IDENT '(' PASSEDARGS ')' .

    $default  reduce usando la regla 21 (CALL)


Estado 72

   54 KV: IDENT . ':' VALUE ';'

    ':'  desplazar e ir al estado 103


Estado 73

   50 OBJECT: '{' KV_SET . '}'

    '}'  desplazar e ir al estado 104


Estado 74

   51 KV_SET: KV . KV_SET
   52       | KV .

    ID  desplazar e ir al estado 1

    '}'       reduce usando la regla 52 (KV_SET)
    '}'       [reduce usando la regla 53 (KV_SET)]
    $default  reduce usando la regla 52 (KV_SET)

    IDENT   ir al estado 72
    KV_SET  ir al estado 105
    KV      ir al estado 74


Estado 75

   55 ARRAY: '[' V_SET . ']'

    ']'  desplazar e ir al estado 106


Estado 76

   56 V_SET: VALUE . ',' V_SET
   57      | VALUE .

    ','  desplazar e ir al estado 107

    $default  reduce usando la regla 57 (V_SET)


Estado 77

   10 ARGS: '(' ARGSET ')' .

    $default  reduce usando la regla 10 (ARGS)


Estado 78

   13 ARGSET: IDENT ',' . ARGSET

    ID  desplazar e ir al estado 1

    ARGSET  ir al estado 108
    IDENT   ir al estado 47


Estado 79

    9 FUNC: FUNKW IDENT ARGS '{' ST . '}'

    '}'  desplazar e ir al estado 109


Estado 80

   16 BLOCK: EXPR . BLOCK

    ID       desplazar e ir al estado 1
    WHILEKW  desplazar e ir al estado 4

    $default  reduce usando la regla 17 (BLOCK)

    EXPR    ir al estado 80
    IDENT   ir al estado 10
    BLOCK   ir al estado 110
    INSTR   ir al estado 11
    CALL    ir al estado 12
    WHILE   ir al estado 13
    ASSIGN  ir al estado 14


Estado 81

   26 WHILE: WHILEKW '(' I2 ')' BLOCK . END

    END  desplazar e ir al estado 111


Estado 82

   29 I2: I LE I .
   36 I: I . '+' I
   37  | I . '-' I
   38  | I . '*' I
   39  | I . '/' I
   40  | I . '<' I
   41  | I . '>' I
   42  | I . LE I
   42  | I LE I .
   43  | I . GE I
   44  | I . EQ I
   45  | I . NE I
   46  | I . OR I
   47  | I . AND I

    '+'  desplazar e ir al estado 58
    '-'  desplazar e ir al estado 59
    '*'  desplazar e ir al estado 60
    '/'  desplazar e ir al estado 61

    ')'       reduce usando la regla 29 (I2)
    $default  reduce usando la regla 42 (I)


Estado 83

   30 I2: I GE I .
   36 I: I . '+' I
   37  | I . '-' I
   38  | I . '*' I
   39  | I . '/' I
   40  | I . '<' I
   41  | I . '>' I
   42  | I . LE I
   43  | I . GE I
   43  | I GE I .
   44  | I . EQ I
   45  | I . NE I
   46  | I . OR I
   47  | I . AND I

    '+'  desplazar e ir al estado 58
    '-'  desplazar e ir al estado 59
    '*'  desplazar e ir al estado 60
    '/'  desplazar e ir al estado 61

    ')'       reduce usando la regla 30 (I2)
    $default  reduce usando la regla 43 (I)


Estado 84

   31 I2: I EQ I .
   36 I: I . '+' I
   37  | I . '-' I
   38  | I . '*' I
   39  | I . '/' I
   40  | I . '<' I
   41  | I . '>' I
   42  | I . LE I
   43  | I . GE I
   44  | I . EQ I
   44  | I EQ I .
   45  | I . NE I
   46  | I . OR I
   47  | I . AND I

    '+'  desplazar e ir al estado 58
    '-'  desplazar e ir al estado 59
    '*'  desplazar e ir al estado 60
    '/'  desplazar e ir al estado 61

    ')'       reduce usando la regla 31 (I2)
    $default  reduce usando la regla 44 (I)


Estado 85

   32 I2: I NE I .
   36 I: I . '+' I
   37  | I . '-' I
   38  | I . '*' I
   39  | I . '/' I
   40  | I . '<' I
   41  | I . '>' I
   42  | I . LE I
   43  | I . GE I
   44  | I . EQ I
   45  | I . NE I
   45  | I NE I .
   46  | I . OR I
   47  | I . AND I

    '+'  desplazar e ir al estado 58
    '-'  desplazar e ir al estado 59
    '*'  desplazar e ir al estado 60
    '/'  desplazar e ir al estado 61

    ')'       reduce usando la regla 32 (I2)
    $default  reduce usando la regla 45 (I)


Estado 86

   33 I2: I OR I .
   36 I: I . '+' I
   37  | I . '-' I
   38  | I . '*' I
   39  | I . '/' I
   40  | I . '<' I
   41  | I . '>' I
   42  | I . LE I
   43  | I . GE I
   44  | I . EQ I
   45  | I . NE I
   46  | I . OR I
   46  | I OR I .
   47  | I . AND I

    LE   desplazar e ir al estado 62
    GE   desplazar e ir al estado 63
    EQ   desplazar e ir al estado 64
    NE   desplazar e ir al estado 65
    '>'  desplazar e ir al estado 68
    '<'  desplazar e ir al estado 69
    '+'  desplazar e ir al estado 58
    '-'  desplazar e ir al estado 59
    '*'  desplazar e ir al estado 60
    '/'  desplazar e ir al estado 61

    ')'       reduce usando la regla 33 (I2)
    $default  reduce usando la regla 46 (I)


Estado 87

   34 I2: I AND I .
   36 I: I . '+' I
   37  | I . '-' I
   38  | I . '*' I
   39  | I . '/' I
   40  | I . '<' I
   41  | I . '>' I
   42  | I . LE I
   43  | I . GE I
   44  | I . EQ I
   45  | I . NE I
   46  | I . OR I
   47  | I . AND I
   47  | I AND I .

    LE   desplazar e ir al estado 62
    GE   desplazar e ir al estado 63
    EQ   desplazar e ir al estado 64
    NE   desplazar e ir al estado 65
    '>'  desplazar e ir al estado 68
    '<'  desplazar e ir al estado 69
    '+'  desplazar e ir al estado 58
    '-'  desplazar e ir al estado 59
    '*'  desplazar e ir al estado 60
    '/'  desplazar e ir al estado 61

    ')'       reduce usando la regla 34 (I2)
    $default  reduce usando la regla 47 (I)


Estado 88

   28 I2: I '>' I .
   36 I: I . '+' I
   37  | I . '-' I
   38  | I . '*' I
   39  | I . '/' I
   40  | I . '<' I
   41  | I . '>' I
   41  | I '>' I .
   42  | I . LE I
   43  | I . GE I
   44  | I . EQ I
   45  | I . NE I
   46  | I . OR I
   47  | I . AND I

    '+'  desplazar e ir al estado 58
    '-'  desplazar e ir al estado 59
    '*'  desplazar e ir al estado 60
    '/'  desplazar e ir al estado 61

    ')'       reduce usando la regla 28 (I2)
    $default  reduce usando la regla 41 (I)


Estado 89

   27 I2: I '<' I .
   36 I: I . '+' I
   37  | I . '-' I
   38  | I . '*' I
   39  | I . '/' I
   40  | I . '<' I
   40  | I '<' I .
   41  | I . '>' I
   42  | I . LE I
   43  | I . GE I
   44  | I . EQ I
   45  | I . NE I
   46  | I . OR I
   47  | I . AND I

    '+'  desplazar e ir al estado 58
    '-'  desplazar e ir al estado 59
    '*'  desplazar e ir al estado 60
    '/'  desplazar e ir al estado 61

    ')'       reduce usando la regla 27 (I2)
    $default  reduce usando la regla 40 (I)


Estado 90

   36 I: I . '+' I
   36  | I '+' I .
   37  | I . '-' I
   38  | I . '*' I
   39  | I . '/' I
   40  | I . '<' I
   41  | I . '>' I
   42  | I . LE I
   43  | I . GE I
   44  | I . EQ I
   45  | I . NE I
   46  | I . OR I
   47  | I . AND I

    '*'  desplazar e ir al estado 60
    '/'  desplazar e ir al estado 61

    $default  reduce usando la regla 36 (I)


Estado 91

   36 I: I . '+' I
   37  | I . '-' I
   37  | I '-' I .
   38  | I . '*' I
   39  | I . '/' I
   40  | I . '<' I
   41  | I . '>' I
   42  | I . LE I
   43  | I . GE I
   44  | I . EQ I
   45  | I . NE I
   46  | I . OR I
   47  | I . AND I

    '*'  desplazar e ir al estado 60
    '/'  desplazar e ir al estado 61

    $default  reduce usando la regla 37 (I)


Estado 92

   36 I: I . '+' I
   37  | I . '-' I
   38  | I . '*' I
   38  | I '*' I .
   39  | I . '/' I
   40  | I . '<' I
   41  | I . '>' I
   42  | I . LE I
   43  | I . GE I
   44  | I . EQ I
   45  | I . NE I
   46  | I . OR I
   47  | I . AND I

    $default  reduce usando la regla 38 (I)


Estado 93

   36 I: I . '+' I
   37  | I . '-' I
   38  | I . '*' I
   39  | I . '/' I
   39  | I '/' I .
   40  | I . '<' I
   41  | I . '>' I
   42  | I . LE I
   43  | I . GE I
   44  | I . EQ I
   45  | I . NE I
   46  | I . OR I
   47  | I . AND I

    $default  reduce usando la regla 39 (I)


Estado 94

   36 I: I . '+' I
   37  | I . '-' I
   38  | I . '*' I
   39  | I . '/' I
   40  | I . '<' I
   41  | I . '>' I
   42  | I . LE I
   42  | I LE I .
   43  | I . GE I
   44  | I . EQ I
   45  | I . NE I
   46  | I . OR I
   47  | I . AND I

    '+'  desplazar e ir al estado 58
    '-'  desplazar e ir al estado 59
    '*'  desplazar e ir al estado 60
    '/'  desplazar e ir al estado 61

    $default  reduce usando la regla 42 (I)


Estado 95

   36 I: I . '+' I
   37  | I . '-' I
   38  | I . '*' I
   39  | I . '/' I
   40  | I . '<' I
   41  | I . '>' I
   42  | I . LE I
   43  | I . GE I
   43  | I GE I .
   44  | I . EQ I
   45  | I . NE I
   46  | I . OR I
   47  | I . AND I

    '+'  desplazar e ir al estado 58
    '-'  desplazar e ir al estado 59
    '*'  desplazar e ir al estado 60
    '/'  desplazar e ir al estado 61

    $default  reduce usando la regla 43 (I)


Estado 96

   36 I: I . '+' I
   37  | I . '-' I
   38  | I . '*' I
   39  | I . '/' I
   40  | I . '<' I
   41  | I . '>' I
   42  | I . LE I
   43  | I . GE I
   44  | I . EQ I
   44  | I EQ I .
   45  | I . NE I
   46  | I . OR I
   47  | I . AND I

    '+'  desplazar e ir al estado 58
    '-'  desplazar e ir al estado 59
    '*'  desplazar e ir al estado 60
    '/'  desplazar e ir al estado 61

    $default  reduce usando la regla 44 (I)


Estado 97

   36 I: I . '+' I
   37  | I . '-' I
   38  | I . '*' I
   39  | I . '/' I
   40  | I . '<' I
   41  | I . '>' I
   42  | I . LE I
   43  | I . GE I
   44  | I . EQ I
   45  | I . NE I
   45  | I NE I .
   46  | I . OR I
   47  | I . AND I

    '+'  desplazar e ir al estado 58
    '-'  desplazar e ir al estado 59
    '*'  desplazar e ir al estado 60
    '/'  desplazar e ir al estado 61

    $default  reduce usando la regla 45 (I)


Estado 98

   36 I: I . '+' I
   37  | I . '-' I
   38  | I . '*' I
   39  | I . '/' I
   40  | I . '<' I
   41  | I . '>' I
   42  | I . LE I
   43  | I . GE I
   44  | I . EQ I
   45  | I . NE I
   46  | I . OR I
   46  | I OR I .
   47  | I . AND I

    LE   desplazar e ir al estado 62
    GE   desplazar e ir al estado 63
    EQ   desplazar e ir al estado 64
    NE   desplazar e ir al estado 65
    '>'  desplazar e ir al estado 68
    '<'  desplazar e ir al estado 69
    '+'  desplazar e ir al estado 58
    '-'  desplazar e ir al estado 59
    '*'  desplazar e ir al estado 60
    '/'  desplazar e ir al estado 61

    $default  reduce usando la regla 46 (I)


Estado 99

   36 I: I . '+' I
   37  | I . '-' I
   38  | I . '*' I
   39  | I . '/' I
   40  | I . '<' I
   41  | I . '>' I
   42  | I . LE I
   43  | I . GE I
   44  | I . EQ I
   45  | I . NE I
   46  | I . OR I
   47  | I . AND I
   47  | I AND I .

    LE   desplazar e ir al estado 62
    GE   desplazar e ir al estado 63
    EQ   desplazar e ir al estado 64
    NE   desplazar e ir al estado 65
    '>'  desplazar e ir al estado 68
    '<'  desplazar e ir al estado 69
    '+'  desplazar e ir al estado 58
    '-'  desplazar e ir al estado 59
    '*'  desplazar e ir al estado 60
    '/'  desplazar e ir al estado 61

    $default  reduce usando la regla 47 (I)


Estado 100

   36 I: I . '+' I
   37  | I . '-' I
   38  | I . '*' I
   39  | I . '/' I
   40  | I . '<' I
   41  | I . '>' I
   41  | I '>' I .
   42  | I . LE I
   43  | I . GE I
   44  | I . EQ I
   45  | I . NE I
   46  | I . OR I
   47  | I . AND I

    '+'  desplazar e ir al estado 58
    '-'  desplazar e ir al estado 59
    '*'  desplazar e ir al estado 60
    '/'  desplazar e ir al estado 61

    $default  reduce usando la regla 41 (I)


Estado 101

   36 I: I . '+' I
   37  | I . '-' I
   38  | I . '*' I
   39  | I . '/' I
   40  | I . '<' I
   40  | I '<' I .
   41  | I . '>' I
   42  | I . LE I
   43  | I . GE I
   44  | I . EQ I
   45  | I . NE I
   46  | I . OR I
   47  | I . AND I

    '+'  desplazar e ir al estado 58
    '-'  desplazar e ir al estado 59
    '*'  desplazar e ir al estado 60
    '/'  desplazar e ir al estado 61

    $default  reduce usando la regla 40 (I)


Estado 102

   23 PASSEDARGS: INSTR ',' PASSEDARGS .

    $default  reduce usando la regla 23 (PASSEDARGS)


Estado 103

   54 KV: IDENT ':' . VALUE ';'

    INTEGER  desplazar e ir al estado 29
    STRING   desplazar e ir al estado 38
    '{'      desplazar e ir al estado 39
    '['      desplazar e ir al estado 40

    INT     ir al estado 41
    OBJECT  ir al estado 42
    ARRAY   ir al estado 43
    VALUE   ir al estado 112


Estado 104

   50 OBJECT: '{' KV_SET '}' .

    $default  reduce usando la regla 50 (OBJECT)


Estado 105

   51 KV_SET: KV KV_SET .

    $default  reduce usando la regla 51 (KV_SET)


Estado 106

   55 ARRAY: '[' V_SET ']' .

    $default  reduce usando la regla 55 (ARRAY)


Estado 107

   56 V_SET: VALUE ',' . V_SET

    INTEGER  desplazar e ir al estado 29
    STRING   desplazar e ir al estado 38
    '{'      desplazar e ir al estado 39
    '['      desplazar e ir al estado 40

    $default  reduce usando la regla 58 (V_SET)

    INT     ir al estado 41
    OBJECT  ir al estado 42
    ARRAY   ir al estado 43
    V_SET   ir al estado 113
    VALUE   ir al estado 76


Estado 108

   13 ARGSET: IDENT ',' ARGSET .

    $default  reduce usando la regla 13 (ARGSET)


Estado 109

    9 FUNC: FUNKW IDENT ARGS '{' ST '}' .

    $default  reduce usando la regla 9 (FUNC)


Estado 110

   16 BLOCK: EXPR BLOCK .

    $default  reduce usando la regla 16 (BLOCK)


Estado 111

   26 WHILE: WHILEKW '(' I2 ')' BLOCK END .

    $default  reduce usando la regla 26 (WHILE)


Estado 112

   54 KV: IDENT ':' VALUE . ';'

    ';'  desplazar e ir al estado 114


Estado 113

   56 V_SET: VALUE ',' V_SET .

    $default  reduce usando la regla 56 (V_SET)


Estado 114

   54 KV: IDENT ':' VALUE ';' .

    $default  reduce usando la regla 54 (KV)
